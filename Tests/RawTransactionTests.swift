//
//  File.swift
//  
//
//  Created by Mikhail Nikanorov on 3/6/22.
//

import Foundation
import XCTest
@testable import mew_wallet_db
import mew_wallet_ios_extensions
import SwiftProtobuf

private let testJson = """
{"hash":"0xd163e4f7fb7b80b71231495534e8dab449f8d38570df0db1c9f2a23abfb674f6","accessList":[],"blockHash":"0xc5a3eaa9911e69f24ce4e36b9618b9605e8aace66fb339ca72ca3f7e6e4e2fba","blockNumber":"0xd6b47a","chainId":"0x1","from":"0x4dd2a335d53bcd17445ebf4504c5632c13a818a1","gas":"0x6045c","gasPrice":"0x1a3253aa93","input":"0x415565b0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000024040500000000000000000000000000000000000000000000000000000000000000aeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000000000000000000000150000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000025368696261537761700000000000000000000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000024ea85000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000003f7724180aa6b939894b5ca4314783b0b36b32900000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000e680000000000000000000000000c95c7b211d25dc888de2bbd56aa83b7d3bcdabc90000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000869584cd00000000000000000000000010000000000000000000000000000000000000110000000000000000000000000000000000000000000000aa51ca74b661ef20f6","maxFeePerGas":"0x1be7598c82","maxPriorityFeePerGas":"0x5f5e1000","nonce":"0x74c","r":"0xc69191e5fb6b698e270ef2fce22b9095aaf03211d46260d011e50ceec86d7435","s":"0x163a82f89d560c24d8626cb2b60ea185c3809bf62109d7173c3b1e0e0a1456b6","to":"0xdef1c0ded9bec7f1a1670819833240f027b25eff","transactionIndex":"0x15e","type":"0x2","v":"0x1","value":"0x38d7ea4c68000"}
"""

private let projectId = "0x00"

final class RawTransaction_tests: XCTestCase {
  private var db: MEWwalletDBImpl!
  
  lazy private var _path: String = {
    let fileManager = FileManager.default
    let url = fileManager.temporaryDirectory.appendingPathComponent("test-db")
    return url.path
  }()

  override func setUp() {
    super.setUp()
    
    db = MEWwalletDBImpl()
    try? FileManager.default.removeItem(atPath: self._path)

    try! db.start(path: self._path, tables: MDBXTableName.allCases, readOnly: false)
  }

  override func tearDown() {
    super.tearDown()

    try? FileManager.default.removeItem(atPath: self._path)
    db = nil
  }
  
  @MainActor func test() {
    let expectation = XCTestExpectation()
    Task {
      do {
        let tx = try RawTransaction(jsonString: testJson, chain: .eth, key: nil)
        
        try await db.write(table: .rawTransaction, key: tx.key, object: tx, mode: .append)
        
        let loadTx: RawTransaction = try db.read(key: tx.key, table: .rawTransaction)
        debugPrint(loadTx)
        debugPrint(tx)
      } catch {
        debugPrint(error)
      }
      
      expectation.fulfill()
    }
    
    wait(for: [expectation], timeout: 5.0)
  }
}
